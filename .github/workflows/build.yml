name: Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build"
        required: true

defaults:
  run:
    shell: bash

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            device: cpu
          - os: windows-latest
            device: cuda
          # - os: macos-latest
          #   device: cpu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ./zundamon-speech-setup

      - name: Cache setup
        id: cache_key
        run: |
          echo -n "cache_key=" >> $GITHUB_OUTPUT
          echo -n ${{ runner.os }}- >> $GITHUB_OUTPUT
          echo -n ${{ matrix.device }}- >> $GITHUB_OUTPUT
          git submodule status | cut -d' ' -f2 | tr '\n' '-' >> $GITHUB_OUTPUT
          echo -n "${{ hashFiles('./zundamon-speech-setup/*') }}-" >> $GITHUB_OUTPUT
          echo ${{ github.sha }} >> $GITHUB_OUTPUT

      - name: Cache restore
        uses: actions/cache@v4
        id: cache
        with:
          key: ${{ steps.cache_key.outputs.cache_key }}
          path: ./zundamon-speech

      - name: Setup zundamon-speech
        run: |
          if [ -z "${{ steps.cache.outputs.cache-hit }}" ]; then
            echo "Cache miss"
            cd zundamon-speech-setup
            ZTS_DEVICE=${{ matrix.device }} rake setup
          else
            echo "Cache hit"
          fi

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> ./src-tauri/target"

      - name: Install dependencies
        run: pnpm install

      - name: Determine information
        id: info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = ${{ toJson(github.event.inputs.version) }};

            core.setOutput('version', version);
            core.setOutput('prerelease', version.includes('-'));
            const platform = process.platform === 'win32' ? 'windows':
              process.platform === 'darwin' ? 'macos':
              process.platform === 'linux' ? 'linux':
              process.platform;
            core.setOutput('zip_name', `zundaarrow_tts-${version}-${platform}.7z`);
            core.setOutput('executable_name', process.platform === 'win32' ? 'zundaarrow_tts.exe': 'zundaarrow_tts');

      - name: Build
        run: |
          pnpm run tauri build --no-bundle
          cd src-tauri/target/release
          7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on -v1900m ../../../${{ steps.info.outputs.zip_name }} ${{ steps.info.outputs.executable_name }} ./zundamon-speech

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.info.outputs.zip_name }}.*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.info.outputs.version }}
          prerelease: ${{ steps.info.outputs.prerelease }}
          draft: false
